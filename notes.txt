For Production:
    serve media files with nginx.
    deck-display-wheel.ts uses any twice. (dont know how not to use)
    switch client side "127.0.0.1" api calls and server side "backend:8000" calls to
    an env variable. 
    add back jwt is authenticated!
    chnage DockerFiles to copy files
    wrap ProjectCard data wityh animatioed project card to add animation specific data 


For Admin panel:
    
    Background Gradient:
        3 Colors  hex code
        3 Positions 0-100
    
    page Names:
        2 page names strings
    
    images:
        image .png / .jpg
        optional upload slug string.
    
    Deck component:
        title text  
        display_text text
        owner slug_text
        image id of the image uploaded
        ?cards, layout, width, height, text color, text font?
    
    ProjectCard component:
        title text
        project name text
        project name color text (hex without #)
        label letter text (1-2 letters)
        label color text (hex without #)
        innner line color text (hex without #)
        owner slug_text
        deck id text (id of the deck that owns this card) 
        image id of the image uploaded
 

to-do:
    change "COMPANY" (default search) with actaul default target
    deck visual update: box shadow, placement, text, more...
    deck wheel animation polish. ?upgrade to be flat wheel
    deck wheel placement.
    chose a font and use it.
    fix the navigation buttons (tech and visual)
    project card: 
        card placement in hand
        hover animation + image paralax on hover
        dealing animation BIG refine.
        
    backend:
        get filters by time (create / edit)
        make a model so save gradient colors and page names in the backend.


for tomorrow:
    page-ing component. 
    CSS GRID TIMEEE